services:
  ctf:
    build: .
    restart: always
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key-in-production}
      - DATABASE_URL=mysql+pymysql://${DATABASE_USER:-ctf_user}:${DATABASE_PASSWORD:-ctf_password}@db:3306/${DATABASE_NAME:-ctf_platform}
      - REDIS_URL=redis://cache:6379/0
      - UPLOAD_FOLDER=/var/uploads
      - CTF_NAME=${CTF_NAME:-My CTF Event}
      - WORKERS=1
      - LOG_FOLDER=/var/log/CTFd
      - REVERSE_PROXY=true
      - EVENTLET_NO_GREENDNS=yes
    volumes:
      - .:/opt/ctf:ro
      - uploads:/var/uploads
      - logs:/var/log/CTFd
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    networks:
      default:
      internal:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:stable-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./conf/nginx/conf.d:/etc/nginx/conf.d:ro
      - uploads:/var/uploads:ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      - ctf
    networks:
      default:

  db:
    image: mariadb:10.11
    restart: always
    environment:
      - MARIADB_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root_password}
      - MARIADB_USER=${DATABASE_USER:-ctf_user}
      - MARIADB_PASSWORD=${DATABASE_PASSWORD:-ctf_password}
      - MARIADB_DATABASE=${DATABASE_NAME:-ctf_platform}
      - MARIADB_AUTO_UPGRADE=1
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      internal:
    command: [
      'mysqld',
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci',
      '--wait_timeout=28800',
      '--log-warnings=0',
      '--max_connections=300',
      '--innodb-buffer-pool-size=256M'
    ]
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  cache:
    image: redis:7-alpine
    restart: always
    volumes:
      - redis_data:/data
    networks:
      internal:
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  uploads:
    driver: local
  logs:
    driver: local
  nginx_cache:
    driver: local

networks:
  default:
    driver: bridge
  internal:
    driver: bridge
    internal: true
